// CLASSES
// input-container <div><label><input></div>

@use '/src/styles/mixins' as *;

input {
  transition: all 0.3s ease-in-out;
  text-align: center;
  min-width: 2.75rem;
  min-height: 2.75rem;
  width: clamp(250px, 50vw, 20rem);
  padding: 0.375rem 0.75rem;
  border-radius: 0.5rem;
  outline: none;
  @include cyan(0.1);
  @include cyan(1, text);
  @include box-shadow(0 0 0.5rem rgba(0, 0, 0, 0.75));
  @include cyan-border(0.5);

  &:disabled {
    @include cyan(0.75, text);
    @include dark-border;
  }

  &:hover:not(&:disabled),
  &:active:not(&:disabled) {
    @include bright;
    @include scale(1.01, x);
  }

  &:focus {
    @include cyan-border;
    @include cyan(0.15);
  }

  &::placeholder {
    @include white-txt(0.25);
  }

  @include respond-up(tablet) {
    max-width: 25rem;
    padding: 0.5rem 1rem;
  }

  @include respond-up(small-desktop) {
    min-width: 2.25rem;
    min-height: 2.25rem;
    max-width: 30rem;
  }

  @include respond-up(large-desktop) {
    max-width: 35rem;
  }
}

.input-container {
  position: relative;
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: center;
  gap: 0.25rem;
  margin-top: 1.75rem;

  label {
    position: absolute;
    top: -1.75rem;
  }

  button {
    position: absolute;
    left: 100%;

    @include respond-up(tablet) {
      left: calc(100% + 0.5rem);
    }
  }

  @include respond-up(tablet) {
    margin-top: 0;

    label {
      position: absolute;
      top: unset;
      right: calc(100% + 0.5rem);
      white-space: nowrap;

      &::after {
        content: ':';
      }
    }
  }
}

.static-input-container {
  @extend .input-container;
  flex-flow: column nowrap;

  label {
    position: static;

    &::after {
      content: '';
    }
  }
}

input[type='checkbox'],
input[type='range'],
input[type='color'],
input[type='number'] {
  min-width: unset !important;
  min-height: unset !important;
  max-width: unset !important;
  width: auto;
  flex: none;
  cursor: pointer;
}

input[type='checkbox'] {
  width: 1.5rem;
  height: 1.5rem;

  @include respond-up(tablet) {
    width: 1rem;
    height: 1rem;
  }
}

input[type='range'],
input[type='color'] {
  padding: 0 !important;
  height: 1.5rem;
  border-radius: 0;
  background-color: transparent;
  box-shadow: none;

  &:hover:not(&:disabled),
  &:active:not(&:disabled),
  &:focus:not(&:disabled) {
    transform: none;
    @include bright;
  }
}

input[type='range'] {
  width: 10rem;

  @include respond-up(large-desktop) {
    width: 16rem;
  }

  @include respond-up(full-hd) {
    width: 24rem;
  }
}

input[type='color'] {
  width: 3rem;
  border: none;

  &:hover:not(&:disabled),
  &:active:not(&:disabled) {
    filter: none;
    @include scale;
  }
}

input[type='number'] {
  cursor: text;
  appearance: textfield;
}

input[type='number']::-webkit-outer-spin-button,
input[type='number']::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.void-input {
  border: none !important;
  border-radius: 0;
  background-color: transparent !important;
  box-shadow: none;
}

.dropzone {
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: center;
  position: relative;
  border-radius: 1rem;
  padding: 2rem;
  transition: all 0.3s ease-in-out;
  @include dark-blue(0.75);
  @include cyan(1, text);
  @include cyan-border(0.5, dashed, 2px);

  &:hover {
    @include bright;
    @include box-glow;
    @include cyan-border(1, dashed, 2px);
  }

  &.dragover {
    @include navy;
    @include cyan-border(1, solid, 2px);

    label {
      @include cyan(1, text);
    }
  }

  input[type='file'] {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    z-index: 10;

    &::file-selector-button {
      cursor: inherit;
    }
  }
}

textarea {
  width: 100%;
  min-height: 16rem;
  max-height: 80vh;
  resize: vertical;
  outline: none;
  transition: all 0.3s ease-in-out;
  border-radius: 0.5rem;
  padding: 0.375rem 0.75rem;
  @include cyan(0.1);
  @include cyan(1, text);
  @include box-shadow(0 0 0.5rem rgba(0, 0, 0, 0.75));
  @include cyan-border(0.5);

  @include respond-up(small-desktop) {
    min-height: 6vw;
  }
}
